<%- include('partials/header.ejs') %>
<%- include('partials/navbar.ejs') %>

<body>
  <!-- MODAL DE MÓDULOS ↓-->
  <div class="modal fade " id="modalModuleDados" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Cadastro de Módulos do Sistema</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <input id="iptModulePrevious" type="text" class="form-control my-2" placeholder="ID" style="display: none">
          <input id="iptModule" type="text" class="form-control my-2" placeholder="Nome do Módulo" required>
        </div>
        <div class="modal-footer">
          <button type="button" id="btnModuleCancel" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
          <button type="submit" id="btnModuleSave" class="btn btn-primary">Salvar</button>
        </div>
      </div>
    </div>
  </div>
  <!-- MODAL DE MÓDULOS ↑-->

  <!-- MODAL DE VERSÕES DO MÓDULO -->

  <!-- MODAL DE VERSÕES DO MÓDULO -->

  <!-- MODAL DE INFORMAÇÕES DA VERSÃO DO MÓDULO -->

  <!-- MODAL DE INFORMAÇÕES DA VERSÃO DO MÓDULO -->

  <div class="container from-control mt-5">
    <div class="border-dark">
      <ul class="nav nav-tabs nav-fill " id="myTab" role="tablist">
        <li id="tabModules" class="nav-item" role="presentation">
          <button class="nav-link active" id="modulesTab" data-bs-toggle="tab" data-bs-target="#cardModules"
            type="button" role="tab" aria-controls="cardModules" aria-selected="true">Módulos</button>
        </li>
        <li id="tabVersions" class="nav-item" role="presentation">
          <button class="nav-link" id="versionsModuletab" data-bs-toggle="tab" data-bs-target="#cardVersions"
            type="button" role="tab" aria-controls="cardVersions" aria-selected="false" disabled>Versões</button>
        </li>
        <li id="tabChanges" class="nav-item" role="presentation">
          <button class="nav-link" id="changesVersion" data-bs-toggle="tab" data-bs-target="#contact-tab-pane"
            type="button" role="tab" aria-controls="contact-tab-pane" aria-selected="false" disabled>Alterações</button>
        </li>
      </ul>

      <div class="tab-content" id="myTabContent">
        <!-- card MODULES ↓↓ -->
        <div id="cardModules" class="tab-pane fade show active" role="tabpanel" aria-labelledby="cardModules"
          tabindex="0">
          <div class="card mb-3 tab-content">
            <div class="card-header">Cadastros</div>
            <div class="card-body text-dark">
              <div class="d-flex justify-content-between">
                <h5 class="card-title">Módulos</h5>
                <a href='#' id='btnNewModule' class='btn btn-default btn-primary 	btn-circle' data-bs-toggle='modal'
                  data-bs-target='#modalModuleDados'><i class="fa-solid fa-square-plus"></i></a>
              </div>
              <div class="table-responsive">
                <table id="modulesTable" class="table table-sm table-bordered 
                                      table-striped table-hover table-secondary my-1">
                  <thead>
                    <tr>
                      <th>Módulo</th>
                      <th>Ação</th>
                    </tr>
                  </thead>
                  <tbody>
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
        <!-- card MODULES ↑↑ -->

        <!-- card VERSIOS ↓↓ -->
        <div id="cardVersions" class="tab-pane fade" role="tabpanel" aria-labelledby="cardVersions" tabindex="0">
          <div class="card mb-3 tab-content">
            <div class="card-header">Cadastros</div>
            <div class="card-body text-dark">
              <div class="d-flex justify-content-between">
                <h5 class="card-title">Versões</h5>
                <a href='#' id='btnNewModuleVersion' class='btn btn-default btn-primary 	btn-circle'
                  data-bs-toggle='modal' data-bs-target='#'><i class="fa-solid fa-square-plus"></i></a>
              </div>
              <div class="table-responsive">
                <table id="versionsModuleTable" class="table table-sm table-bordered 
                                                      table-striped table-hover table-secondary my-1 w-100">
                  <thead>
                    <tr>
                      <th>Número da Versão</th>
                      <th>Data da Versão</th>
                      <th>Ação</th>
                    </tr>
                  </thead>
                  <tbody></tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
        <!-- card VERSIOS ↑↑ -->

      </div>
    </div>

  </div>


  <%-include('partials/libs.ejs') %>
  <!--arquivo de import de libs genéricas-->
  <script>

    async function deleteModule(module) {

      Swal.fire({
        title: `Apagar Módulo '${module.module}'?`,
        text: "Ao clicar em 'OK' o módulo será apagado.",
        icon: "warning",
        showCancelButton: true,
        cancelButtonText: 'Não, cancelar',
        confirmButtonText: "Sim, apagar!"
      }).then(decision => {
        if (!decision.isConfirmed) {
          alertError(
            'Operação abortada!',
            `O Módulo '${module.module}' não foi apagado.`
          );
          return;
        }
        $.ajax({
          url: "/module/deletar",
          type: "delete",
          contentType: 'application/json',
          headers: {
            "Authorization": "Bearer " + '<%=session.token%>'
          },
          data: JSON.stringify({
            "module": module.module,
          }),
          success: function (result, textStatus, jQxhr) {
            alertSuccess(
              'Módulo apagado!',
              `O Módulo '${module.module}' foi apagado com sucesso.`
            );
            modulesTable.ajax.reload();
          },
          error: function (xhr, ajaxOptions, thrownError) {
            alertError(
              '** ERRO **',
              `Falha ao apagar o Módulo '${module.module}'.`
            );
          }
        });

      })
      return;
    }

    function clearModalModule() {
      $("#iptModule").val("");
      $("#iptModulePrevious").val("");
    }

    function setDataModuleModal(module) {
      if (!module) {
        clearModalModule();
        return;
      }
      $("#iptModulePrevious").val(module.module);
      $("#iptModule").val(module.module);
    }

    function buildModule() {
      let module = {};
      module.module = $("#iptModule").val();
      module.previous = $("#iptModulePrevious").val()
      return module;
    }

    async function updateModule(module) {
      $.ajax({
        url: "/module/alterar",
        type: "put",
        contentType: 'application/json',
        headers: {
          "Authorization": "Bearer " + '<%=session.token%>'
        },
        data: JSON.stringify({
          "module": module.module,
          "previous": module.previous,
        }),
        success: function (result, textStatus, jQxhr) {
          alertSuccess(
            'Módulo alterado!',
            `O Módulo '${module.module}' foi alterado com sucesso.`
          );
          modulesTable.ajax.reload();
        },
        error: function (xhr, ajaxOptions, thrownError) {
          alertError(
            '** ERRO **',
            `Falha ao alterar o Módulo '${module.module}'.`
          );
        }
      });
      return;
    }

    async function insertModule(module) {
      $.ajax({
        url: "/module/inserir",
        type: "post",
        contentType: 'application/json',
        headers: {
          "Authorization": "Bearer " + '<%=session.token%>'
        },
        data: JSON.stringify({
          "module": module.module,
        }),
        success: function (result, textStatus, jQxhr) {
          alertSuccess(
            'Módulo salvo!',
            `O Módulo '${module.module}' foi salvo com sucesso.`
          );
          modulesTable.ajax.reload();
        },
        error: function (xhr, ajaxOptions, thrownError) {
          alertError(
            '** ERRO **',
            `Falha ao salvar o Módulo '${module.module}'.`
          );
        }
      });
      return;
    }

    let modulesTable = $('#modulesTable').DataTable({
      "language": {
        "url": "https://cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Portuguese-Brasil.json",
      },
      "paging": false,
      "searching": false,
      "responsive": true,
      scrollY: '300px',
      scrollCollapse: true,
      order: [[0, 'asc']],
      ajax: function (data, callback, settings) {
        $.ajax({
          url: '/module/buscar',
          type: 'post',
          contentType: 'application/json',
          headers: {
            "Authorization": "Bearer " + '<%=session.token%>'
          },
          success: function (arrVersionsModule, textStatus, jQxhr) {
            callback({
              // draw: data.draw,
              data: arrVersionsModule.data,
              recordsTotal: arrVersionsModule.data.length,
              recordsFiltered: arrVersionsModule.data.length
            });
          },
          error: function (jqXhr, textStatus, errorThrown) {
            console.log(errorThrown)
          }
        });
      },
      "serverSide": true,
      columns: [
        { data: "module" },
        {
          defaultContent: "<div class= 'd-flex justify-content-around'>" +
            "<a href='#' id='btnEditModule' class='btn btn-default btn-warning 	btn-circle btn-sm' data-bs-toggle='modal' data-bs-target='#modalModuleDados' ><i class='fa-solid fa-user-pen'></i></a>" +
            "<a href='#' id='btnDeleteModule' class='btn btn-default btn-danger btn-circle btn-sm'><i class='fa-solid fa-user-xmark'></i></a>" +
            "<a href='#' id='btnInfoModule' class='btn btn-default btn-primary btn-circle btn-sm'><i class='fa-solid fa-circle-info' ></i></a>" +
            "</div>"
        },
      ],
    });

    $('#modulesTable tbody').on('click', 'a', async function () {
      let btnModule = $(this)[0].id;
      let dataRow = modulesTable.row($(this).parents('tr')).data();

      if (btnModule == 'btnDeleteModule') {
        await deleteModule(dataRow)
      } else if (btnModule == 'btnEditModule') {
        setDataModuleModal(dataRow);
      } else if (btnModule == 'btnInfoModule') { //bdnInfo aqui
        enableAndDisableTabs('tabVersions', 'cardVersions', 'tabModules', 'cardModules')
        showVersionsModuleModal(dataRow);
      }
    });

    function enableAndDisableTabs(enableTab, enableCard, disableTab, disableCard) {
      $(`#${disableTab} button`).attr('disabled', 'disabled').removeClass('active');
      $(`#${disableCard}`).removeClass('show active');

      $(`#${enableTab} button`).removeAttr('disabled',).addClass('active')
      $(`#${enableCard}`).addClass('show active');
    }

    $("#btnNewModule").click(() => setDataModuleModal());

    $("#btnModuleSave").click(async () => {
      if ($("#iptModulePrevious").val()) {
        Swal.fire({
          title: `Alterar Módulo '${$("#iptModule").val()}'?`,
          text: "Ao clicar em 'OK' todos os dados do Módulo serão alterados.",
          icon: "warning",
          showCancelButton: true,
          cancelButtonText: 'Não, cancelar',
          confirmButtonText: "Sim, alterar!"
        }).then(async (decision) => {
          if (!decision.isConfirmed) {
            return;
          }
          await updateModule(buildModule());
          setDataModuleModal();
          return;
        });
      } else {
        await insertModule(buildModule());
        return setDataModuleModal();
      }
    })


    $("#btnModuleCancel").click(() => {
      return setDataModuleModal();
    })

    // ##############################################################
    //versions Module implementation below
    let versionsModuleTable;

    // function setTitleVersionsModal(module) {
    //   $("#titleVersionsModule").html(`Versões de ${module.module}`) //set the title modal title
    // }

    function setTableVersionsOfModal(module) {
      versionsModuleTable = $('#versionsModuleTable').DataTable({
        "language": {
          "url": "https://cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Portuguese-Brasil.json",
        },
        destroy: true,
        paging: false,
        searching: false,
        responsive: true,
        scrollCollapse: true,
        ajax: function (data, callback, settings) {
          $.ajax({
            url: '/version/buscar',
            type: 'post',
            contentType: 'application/json',
            headers: {
              "Authorization": "Bearer " + '<%=session.token%>'
            },
            data: JSON.stringify({
              id: "",
              version: "",
              date: "",
              module: module.module
            }),
            success: function (arrVersionsModule, textStatus, jQxhr) {
              callback({
                // draw: data.draw,
                data: arrVersionsModule.data,
                recordsTotal: arrVersionsModule.data.length,
                recordsFiltered: arrVersionsModule.data.length
              });
            },
            error: function (jqXhr, textStatus, errorThrown) {
              console.log(errorThrown)
            }
          });
        },
        serverSide: true,
        columns: [
          { data: "version" },
          { data: "date" },
          {
            defaultContent: "<div class= ''>" +
              "<a href='#' id='btnEditModuleVersion' class='btn btn-default btn-warning btn-circle btn-sm' data-bs-toggle='modal' data-bs-target='#modalDadosVersion' ><i class='fa-solid fa-pen-to-square'></i></a>" +
              "<a href='#' id='btnDeleteModuleVersion' class='btn btn-default btn-danger btn-circle btn-sm mx-1'><i class='fa-solid fa-trash-can'></i></a>" +
              "<a href='#' id='btnInfoVersion' class='btn btn-default btn-primary btn-circle btn-sm'><i class='fa-solid fa-circle-info'></i></a>" +
              "</div>"
          },
        ],
      });


    }

    function startVersionsModal(module) {
      // setTitleVersionsModal(module);
      setTableVersionsOfModal(module);
    }

    function showVersionsModuleModal(module) {
      startVersionsModal(module);
    }

  </script>
</body>

<%- include('partials/footer.ejs') %>